{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "ws-synapse-wtc"
		},
		"LS_ADLS_StgaccntDevCustomerdata_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_StgaccntDevCustomerdata'"
		},
		"ws-synapse-wtc-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ws-synapse-wtc-WorkspaceDefaultSqlServer'"
		},
		"LS_ABLB_StgacntDevCustomerData_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://stgaccntdevcustomerdata.blob.core.windows.net/"
		},
		"LS_ADLS_StgaccntDevCustomerdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgaccntdevcustomerdata.dfs.core.windows.net/"
		},
		"ws-synapse-wtc-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgaccntdevcustomerdata.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Copy_Latest_File_From_Folder')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Picks the latest file from the Folder.\nCustomer, Accounts, Party. \njust copy the latest file from the entire folder.",
				"activities": [
					{
						"name": "Files in Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_binary_Path",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pDirectoryName": "landing_dir"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FIle in a Folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Files in Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Files in Folder').output.childItems\r\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata of FIle",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pContainerName": "data",
												"pdirectoryname": "landing_dir",
												"pfilename": "@item().name"
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata of FIle",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(activity('Get Metadata of FIle').output.lastModified,'yyyyMMddHHmmss'),formatDateTime(variables('vLastModifiedDate'),'yyyyMMddHHmmss'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vLastFileName",
													"value": {
														"value": "@activity('Get Metadata of FIle').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data to Loading Dir",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FIle in a Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pdirectoryname": "landing_dir",
									"pfilename": {
										"value": "@variables('vLastFileName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pdirectoryname": "loading_dir",
									"pfilename": "@variables('vLastFileName')"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"vLastFileName": {
						"type": "String",
						"defaultValue": "Dummy.txt"
					},
					"vLastModifiedDate": {
						"type": "String",
						"defaultValue": "1990-01-01T05:12:22Z"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_binary_Path')]",
				"[concat(variables('workspaceId'), '/datasets/ds_binary_File')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Copy_Specific_Latest_File_From_Folder')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Picks the latest file from the Folder.\nCustomer, Accounts, Party. \njust copy the latest file from the entire folder.",
				"activities": [
					{
						"name": "Files in Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_binary_Path",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pDirectoryName": "landing_dir"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FIle in a Folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Customer Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Customer Files').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata of FIle",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_binary_File",
											"type": "DatasetReference",
											"parameters": {
												"pContainerName": "data",
												"pdirectoryname": "landing_dir",
												"pfilename": "@item().name"
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata of FIle",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(formatDateTime(activity('Get Metadata of FIle').output.lastModified,'yyyyMMddHHmmss'),formatDateTime(variables('vLastModifiedDate'),'yyyyMMddHHmmss'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set variable",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vLastFileName",
													"value": {
														"value": "@activity('Get Metadata of FIle').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Copy data to Loading Dir",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "FIle in a Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pdirectoryname": "landing_dir",
									"pfilename": {
										"value": "@variables('vLastFileName')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pdirectoryname": "loading_dir",
									"pfilename": "@variables('vLastFileName')"
								}
							}
						]
					},
					{
						"name": "Customer Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Files in Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Files in Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'CUSTOMER1')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data to Loading Dir",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Dummy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Delete Processed FIle",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_binary_File",
								"type": "DatasetReference",
								"parameters": {
									"pContainerName": "data",
									"pdirectoryname": "loading_dir",
									"pfilename": "@variables('vLastFileName')"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_StgaccntDevCustomerdata",
									"type": "LinkedServiceReference"
								},
								"path": "data/logs/"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"vLastFileName": {
						"type": "String",
						"defaultValue": "Dummy.txt"
					},
					"vLastModifiedDate": {
						"type": "String",
						"defaultValue": "1990-01-01T05:12:22Z"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_binary_Path')]",
				"[concat(variables('workspaceId'), '/datasets/ds_binary_File')]",
				"[concat(variables('workspaceId'), '/pipelines/PL_Dummy')]",
				"[concat(variables('workspaceId'), '/linkedServices/LS_ADLS_StgaccntDevCustomerdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_binary_File')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_StgaccntDevCustomerdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pContainerName": {
						"type": "string",
						"defaultValue": "data"
					},
					"pdirectoryname": {
						"type": "string",
						"defaultValue": "landing_dir"
					},
					"pfilename": {
						"type": "string",
						"defaultValue": "sales.csv"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pfilename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().pdirectoryname",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().pContainerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ADLS_StgaccntDevCustomerdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_binary_Path')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_StgaccntDevCustomerdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pContainerName": {
						"type": "string",
						"defaultValue": "data"
					},
					"pDirectoryName": {
						"type": "string",
						"defaultValue": "landing_dir"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().pDirectoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().pContainerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LS_ADLS_StgaccntDevCustomerdata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ABLB_StgacntDevCustomerData')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "linked service pointing to \nstorage account Name:  stgacntdevcustomerdata \ncontainer Name : Data",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_ABLB_StgacntDevCustomerData_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LS_ADLS_StgaccntDevCustomerdata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_StgaccntDevCustomerdata_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_StgaccntDevCustomerdata_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ws-synapse-wtc-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ws-synapse-wtc-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ws-synapse-wtc-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ws-synapse-wtc-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Dummy')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}